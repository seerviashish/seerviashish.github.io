{"version":3,"sources":["main/pages/HomePage/index.tsx"],"names":["HomePage","homePageRef","React","createRef","this","current","scene","THREE","camera","window","innerWidth","innerHeight","position","z","renderer","shadowMap","enabled","type","setSize","appendChild","domElement","addEventListener","aspect","updateProjectionMatrix","font","parse","fontJson","textGeo","size","height","bevelThickness","geometry","materialText","color","materialCube","cube","textMessage","center","y","add","animate","requestAnimationFrame","rotation","x","render","classes","props","ref","className","container","Component","withStyles","theme","createStyles","width"],"mappings":"6v8GAgBMA,E,4MAIIC,YAAcC,IAAMC,Y,kEAE1B,GAAIC,KAAKH,YAAYI,QAAS,CAC5B,IAAMC,EAAQ,IAAIC,IACZC,EAAS,IAAID,IACjB,IACAE,OAAOC,WAAaD,OAAOE,YAC3B,GACA,KAEFH,EAAOI,SAASC,EAAI,GAEpB,IAAMC,EAAW,IAAIP,IACrBO,EAASC,UAAUC,SAAU,EAC7BF,EAASC,UAAUE,KAAOV,IAC1BO,EAASI,QAAQT,OAAOC,WAAYD,OAAOE,aAC3CP,KAAKH,YAAYI,QAAQc,YAAYL,EAASM,YAC9CX,OAAOY,iBAAiB,UAAU,WAChCP,EAASI,QAAQT,OAAOC,WAAYD,OAAOE,aAC3CH,EAAOc,OAASb,OAAOC,WAAaD,OAAOE,YAC3CH,EAAOe,4BAGT,IACMC,GADS,IAAIjB,KACCkB,MAAMC,GACpBC,EAAU,IAAIpB,IAAmB,oBAAqB,CAC1DiB,KAAMA,EACNI,KAAM,GACNC,OAAQ,GACRC,eAAgB,IAGZC,EAAW,IAAIxB,IACfyB,EAAe,IAAIzB,IAAwB,CAC/C0B,MAAO,WAEHC,EAAe,IAAI3B,IAAwB,CAAE0B,MAAO,WACpDE,EAAO,IAAI5B,IAAWwB,EAAUG,GAChCE,EAAc,IAAI7B,IAAWoB,EAASK,GAC5CI,EAAYxB,SAASC,GAAK,IAC1BuB,EAAYL,SAASM,SACrBD,EAAYxB,SAAS0B,EAAI,IAEzBhC,EAAMiC,IAAIJ,GACV7B,EAAMiC,IAAIH,IACM,SAAVI,IACJC,sBAAsBD,GAEtBJ,EAAYM,SAASJ,GAAK,IAC1BH,EAAKO,SAASC,GAAK,IACnBR,EAAKO,SAASJ,GAAK,IAEnBxB,EAAS8B,OAAOtC,EAAOE,GAGzBgC,M,+BAGM,IACAK,EAAYzC,KAAK0C,MAAjBD,QACR,OAAO,qBAAKE,IAAK3C,KAAKH,YAAa+C,UAAWH,EAAQI,gB,GAhEnC/C,IAAMgD,WAoEdC,uBA/EA,SAACC,GAAD,OACbC,YAAa,CACXJ,UAAW,CACTK,MAAO,OACPzB,OAAQ,aA2ECsB,CAAmBnD","file":"static/js/HomePage.d57682c3.chunk.js","sourcesContent":["import { createStyles, Theme, withStyles, WithStyles } from \"@material-ui/core\";\nimport React from \"react\";\nimport * as THREE from \"three\";\nimport fontJson from \"./sample.json\";\n\nconst styles = (theme: Theme) =>\n  createStyles({\n    container: {\n      width: \"100%\",\n      height: \"100vh\",\n    },\n  });\n\ntype Props = {};\ntype State = {};\n\nclass HomePage extends React.Component<\n  Props & WithStyles<typeof styles>,\n  State\n> {\n  private homePageRef = React.createRef<HTMLDivElement>();\n  componentDidMount() {\n    if (this.homePageRef.current) {\n      const scene = new THREE.Scene();\n      const camera = new THREE.PerspectiveCamera(\n        100,\n        window.innerWidth / window.innerHeight,\n        0.1,\n        1000\n      );\n      camera.position.z = 10;\n\n      const renderer = new THREE.WebGLRenderer();\n      renderer.shadowMap.enabled = true;\n      renderer.shadowMap.type = THREE.PCFSoftShadowMap;\n      renderer.setSize(window.innerWidth, window.innerHeight);\n      this.homePageRef.current.appendChild(renderer.domElement);\n      window.addEventListener(\"resize\", () => {\n        renderer.setSize(window.innerWidth, window.innerHeight);\n        camera.aspect = window.innerWidth / window.innerHeight;\n        camera.updateProjectionMatrix();\n      });\n\n      const loader = new THREE.FontLoader();\n      const font = loader.parse(fontJson);\n      const textGeo = new THREE.TextGeometry(\"Development - 55%\", {\n        font: font,\n        size: 80,\n        height: 10,\n        bevelThickness: 2,\n      });\n\n      const geometry = new THREE.BoxGeometry();\n      const materialText = new THREE.MeshBasicMaterial({\n        color: 0xffff00,\n      });\n      const materialCube = new THREE.MeshBasicMaterial({ color: 0xf8c471 });\n      const cube = new THREE.Mesh(geometry, materialCube);\n      const textMessage = new THREE.Mesh(textGeo, materialText);\n      textMessage.position.z = -850;\n      textMessage.geometry.center();\n      textMessage.position.y = 150;\n\n      scene.add(cube);\n      scene.add(textMessage);\n      const animate = function () {\n        requestAnimationFrame(animate);\n\n        textMessage.rotation.y += 0.01;\n        cube.rotation.x += 0.01;\n        cube.rotation.y += 0.01;\n\n        renderer.render(scene, camera);\n      };\n\n      animate();\n    }\n  }\n  render() {\n    const { classes } = this.props;\n    return <div ref={this.homePageRef} className={classes.container}></div>;\n  }\n}\n\nexport default withStyles(styles)(HomePage);\n"],"sourceRoot":""}