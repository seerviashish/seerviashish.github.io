{"version":3,"sources":["pages/HomePage/index.tsx","components/MyAppBar/index.tsx","components/StudentCard/index.tsx"],"names":["connector","connect","state","students","homePage","dispatch","bindActionCreators","setStudents","setStudent","clearStudents","clearStudent","addStudent","student","removeStudent","studentId","rejectStudent","shortListStudent","drawerMenus","name","icon","HomePage","searchText","drawerOpen","onSearch","debounce","e","target","value","trim","toLowerCase","setState","toggleDrawer","open","event","type","key","toggleDrawerByMenu","handleMenu","props","history","replace","HOME","push","SHORTLISTED","REJECTED","handleCardClick","console","log","this","classes","anchor","style","position","onClose","onOpen","className","drawerList","role","onClick","onKeyDown","drawerHeader","map","menu","index","button","primary","studentLists","filter","data","includes","id","onReject","onSelect","onRemove","React","Component","withRouter","withStyles","theme","createStyles","width","marginTop","spacing","display","alignItems","padding","mixins","toolbar","justifyContent","grow","flexGrow","menuButton","marginRight","title","breakpoints","up","search","borderRadius","shape","backgroundColor","fade","palette","common","white","marginLeft","searchIcon","height","pointerEvents","inputRoot","color","inputInput","paddingLeft","transition","transitions","create","between","appbar","zIndex","drawer","onlyView","back","edge","aria-label","variant","noWrap","placeholder","root","input","inputProps","onChange","maxWidth","avatar","red","rejected","selected","green","src","Image","alt","action","subheader","StudentState","stopPropagation"],"mappings":"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","file":"static/js/HomePage.f10b7151.chunk.js","sourcesContent":["import React, { ChangeEvent } from \"react\";\nimport \"./index.css\";\nimport {\n  Theme,\n  createStyles,\n  WithStyles,\n  withStyles,\n  debounce,\n  SwipeableDrawer,\n  List,\n  Divider,\n  ListItem,\n  ListItemIcon,\n  ListItemText,\n} from \"@material-ui/core\";\nimport { RouteComponentProps, withRouter } from \"react-router-dom\";\nimport MyAppBar from \"../../components/MyAppBar\";\nimport {\n  addStudent,\n  clearStudent,\n  rejectStudent,\n  removeStudent,\n  setStudent,\n  shortListStudent,\n  Student,\n} from \"./slice\";\nimport { RootState } from \"../../redux/rootReducer\";\nimport { AppDispatch } from \"../../redux/store\";\nimport { bindActionCreators } from \"@reduxjs/toolkit\";\nimport { connect, ConnectedProps } from \"react-redux\";\nimport StudentCard from \"../../components/StudentCard\";\nimport HomeIcon from \"@material-ui/icons/Home\";\nimport UserIcon from \"@material-ui/icons/SupervisedUserCircle\";\nimport RemoveCircleIcon from \"@material-ui/icons/RemoveCircle\";\nimport { HOME, REJECTED, SHORTLISTED } from \"../../constants/routes\";\n\nconst mapStateToProps = (state: RootState) => ({\n  students: state.homePage.students,\n  homePage: state,\n});\n\nconst mapDispatchToProps = (dispatch: AppDispatch) =>\n  bindActionCreators(\n    {\n      setStudents: (students: Student[]) => setStudent(students),\n      clearStudents: () => clearStudent(),\n      addStudent: (student: Student) => addStudent(student),\n      removeStudent: (studentId: string) => removeStudent(studentId),\n      rejectStudent: (studentId: string) => rejectStudent(studentId),\n      shortListStudent: (studentId: string) => shortListStudent(studentId),\n    },\n    dispatch\n  );\n\nconst connector = connect(mapStateToProps, mapDispatchToProps);\n\ntype Props = ConnectedProps<typeof connector> & {};\n\ntype State = {\n  searchText: string;\n  drawerOpen: boolean;\n};\n\nconst styles = (theme: Theme) =>\n  createStyles({\n    studentLists: {\n      width: \"100%\",\n      \"& > *\": {\n        marginTop: theme.spacing(1),\n      },\n    },\n    drawerList: {\n      width: 270,\n    },\n    drawerHeader: {\n      display: \"flex\",\n      alignItems: \"center\",\n      padding: theme.spacing(0, 1),\n      ...theme.mixins.toolbar,\n      justifyContent: \"flex-end\",\n    },\n  });\n\ntype DrawerMenus = {\n  name: string;\n  icon: React.ReactChild;\n};\n\nconst drawerMenus: DrawerMenus[] = [\n  {\n    name: \"Home\",\n    icon: <HomeIcon />,\n  },\n  {\n    name: \"Shortlisted\",\n    icon: <UserIcon />,\n  },\n  {\n    name: \"Rejected\",\n    icon: <RemoveCircleIcon />,\n  },\n];\nclass HomePage extends React.Component<\n  Props & WithStyles<typeof styles> & RouteComponentProps,\n  State\n> {\n  readonly state: State = {\n    searchText: \"\",\n    drawerOpen: false,\n  };\n\n  onSearch = debounce((e: ChangeEvent<HTMLInputElement>) => {\n    const searchText: string = e.target.value.trim().toLowerCase();\n    this.setState({ searchText });\n  }, 200);\n\n  componentDidMount() {\n    // Tried fetch data but getting  cors issue and tried to using header but not worked.\n    // fetch(\n    //   \"https://s3-ap-southeast-1.amazonaws.com/he-public-data/users49b8675.json\",\n    //   {\n    //     method: \"GET\",\n    //   }\n    // )\n    //   .then((data) => data.json())\n    //   .then((data) => {\n    //     console.log(data);\n    //   });\n  }\n\n  toggleDrawer = (open: boolean) => (event: any) => {\n    if (\n      event &&\n      event.type === \"keydown\" &&\n      (event.key === \"Tab\" || event.key === \"Shift\")\n    ) {\n      return;\n    }\n  };\n\n  toggleDrawerByMenu = () => {\n    this.setState({\n      drawerOpen: !this.state.drawerOpen,\n    });\n  };\n\n  handleMenu = (name: string) => (event: any) => {\n    if (name === \"Home\") {\n      this.props.history.replace(HOME);\n    } else if (name === \"Shortlisted\") {\n      this.props.history.push(SHORTLISTED);\n    } else if (name === \"Rejected\") {\n      this.props.history.push(REJECTED);\n    }\n  };\n\n  handleCardClick = (studentId: string) => (\n    event: React.MouseEvent<HTMLElement>\n  ) => {\n    // event.stopPropagation();\n    this.props.history.push(`/student/${studentId}`);\n  };\n\n  render() {\n    console.log(this.props);\n    const { classes, students } = this.props;\n    const { searchText, drawerOpen } = this.state;\n    return (\n      <div>\n        <MyAppBar\n          onSearch={this.onSearch}\n          drawerOpen={drawerOpen}\n          toggleDrawer={(e) => {\n            this.toggleDrawerByMenu();\n          }}\n        />\n        <SwipeableDrawer\n          anchor=\"left\"\n          style={{ position: \"static\" }}\n          open={drawerOpen}\n          onClose={this.toggleDrawer(false)}\n          onOpen={this.toggleDrawer(true)}\n        >\n          <div\n            className={classes.drawerList}\n            role=\"presentation\"\n            onClick={this.toggleDrawer(false)}\n            onKeyDown={this.toggleDrawer(false)}\n          >\n            <div className={classes.drawerHeader} />\n            <List>\n              {drawerMenus.map((menu, index) => (\n                <ListItem button key={menu.name}>\n                  <ListItemIcon>{menu.icon}</ListItemIcon>\n                  <ListItemText\n                    primary={menu.name}\n                    onClick={this.handleMenu(menu.name)}\n                  />\n                </ListItem>\n              ))}\n            </List>\n            <Divider />\n          </div>\n        </SwipeableDrawer>\n        <div className={classes.drawerHeader} />\n        <div className={classes.studentLists}>\n          {students &&\n            students\n              .filter((data) => {\n                if (searchText) {\n                  return data.name.toLowerCase().includes(searchText);\n                }\n                return true;\n              })\n              .map((student, index) => (\n                <StudentCard\n                  onClick={(id: string) => () => {}}\n                  key={`st-${index}`}\n                  student={student}\n                  onReject={(id: string) => {\n                    this.props.rejectStudent(id);\n                  }}\n                  onSelect={(id: string) => {\n                    this.props.shortListStudent(id);\n                  }}\n                  onRemove={(id: string) => {\n                    this.props.removeStudent(id);\n                  }}\n                />\n              ))}\n        </div>\n      </div>\n    );\n  }\n}\n\nexport default connector(withRouter(withStyles(styles)(HomePage)));\n","import {\n  AppBar,\n  createStyles,\n  fade,\n  IconButton,\n  InputBase,\n  Theme,\n  Toolbar,\n  Typography,\n  withStyles,\n  WithStyles,\n} from \"@material-ui/core\";\nimport MenuIcon from \"@material-ui/icons/Menu\";\nimport SearchIcon from \"@material-ui/icons/Search\";\nimport BackIcon from \"@material-ui/icons/ArrowBack\";\nimport React, { ChangeEvent } from \"react\";\n\ntype MyAppBarProps = {\n  onlyView?: boolean;\n  back?: () => void;\n  onSearch: (e: ChangeEvent<HTMLInputElement>) => void;\n  toggleDrawer: (e: React.MouseEvent<HTMLElement>) => void;\n  drawerOpen: boolean;\n};\n\nconst styles = (theme: Theme) =>\n  createStyles({\n    grow: {\n      flexGrow: 1,\n    },\n    menuButton: {\n      marginRight: theme.spacing(2),\n    },\n    title: {\n      display: \"none\",\n      [theme.breakpoints.up(\"sm\")]: {\n        display: \"block\",\n      },\n    },\n    search: {\n      position: \"relative\",\n      borderRadius: theme.shape.borderRadius,\n      backgroundColor: fade(theme.palette.common.white, 0.15),\n      \"&:hover\": {\n        backgroundColor: fade(theme.palette.common.white, 0.25),\n      },\n      marginRight: theme.spacing(2),\n      marginLeft: 0,\n      width: \"100%\",\n      [theme.breakpoints.up(\"sm\")]: {\n        marginLeft: theme.spacing(3),\n        width: \"auto\",\n      },\n    },\n    searchIcon: {\n      padding: theme.spacing(0, 2),\n      height: \"100%\",\n      position: \"absolute\",\n      pointerEvents: \"none\",\n      display: \"flex\",\n      alignItems: \"center\",\n      justifyContent: \"center\",\n    },\n    inputRoot: {\n      color: \"inherit\",\n    },\n    inputInput: {\n      padding: theme.spacing(1, 1, 1, 0),\n      paddingLeft: `calc(1em + ${theme.spacing(4)}px)`,\n      transition: theme.transitions.create(\"width\"),\n      width: \"100%\",\n      [theme.breakpoints.up(\"lg\")]: {\n        width: \"70ch\",\n      },\n      [theme.breakpoints.between(\"sm\", \"md\")]: {\n        width: \"40ch\",\n      },\n    },\n    appbar: {\n      zIndex: theme.zIndex.drawer + 1,\n    },\n  });\n\nconst MyAppBar: React.FC<MyAppBarProps & WithStyles<typeof styles>> = ({\n  classes,\n  onSearch,\n  toggleDrawer,\n  onlyView,\n  back,\n}) => {\n  return (\n    <div className={classes.grow}>\n      <AppBar position=\"fixed\" className={classes.appbar}>\n        <Toolbar>\n          {onlyView ? (\n            <IconButton\n              edge=\"start\"\n              className={classes.menuButton}\n              color=\"inherit\"\n              aria-label=\"back button\"\n              onClick={(e) => {\n                if (back) {\n                  back();\n                }\n              }}\n            >\n              <BackIcon />\n            </IconButton>\n          ) : (\n            <IconButton\n              edge=\"start\"\n              className={classes.menuButton}\n              color=\"inherit\"\n              aria-label=\"open drawer\"\n              onClick={toggleDrawer}\n            >\n              <MenuIcon />\n            </IconButton>\n          )}\n          <Typography className={classes.title} variant=\"h6\" noWrap>\n            Impact-Analysis\n          </Typography>\n          {!onlyView && (\n            <div className={classes.search}>\n              <div className={classes.searchIcon}>\n                <SearchIcon />\n              </div>\n              <InputBase\n                placeholder=\"Search…\"\n                classes={{\n                  root: classes.inputRoot,\n                  input: classes.inputInput,\n                }}\n                inputProps={{ \"aria-label\": \"search\" }}\n                onChange={onSearch}\n              />\n            </div>\n          )}\n        </Toolbar>\n      </AppBar>\n    </div>\n  );\n};\n\nexport default withStyles(styles)(MyAppBar);\n","import {\n  Avatar,\n  Button,\n  Card,\n  CardActions,\n  CardHeader,\n  createStyles,\n  IconButton,\n  Theme,\n  Typography,\n  withStyles,\n  WithStyles,\n} from \"@material-ui/core\";\nimport React from \"react\";\nimport DeleteIcon from \"@material-ui/icons/Delete\";\nimport { Student, StudentState } from \"../../pages/HomePage/slice\";\nimport { green, red } from \"@material-ui/core/colors\";\n\ntype StudentCardProps = {\n  onlyView?: boolean;\n  student: Student;\n  onReject: (studentId: string) => void;\n  onSelect: (studentId: string) => void;\n  onRemove: (studentId: string) => void;\n  onClick: (studentId: string) => (e: any) => void;\n};\n\nconst styles = (theme: Theme) =>\n  createStyles({\n    root: {\n      maxWidth: \"100%\",\n      padding: theme.spacing(2),\n    },\n    avatar: {\n      backgroundColor: red[500],\n      width: 80,\n      height: 80,\n    },\n    rejected: {\n      color: red[800],\n    },\n    selected: {\n      color: green[800],\n    },\n  });\n\nconst StudentCard: React.FC<StudentCardProps & WithStyles<typeof styles>> = ({\n  classes,\n  onReject,\n  onSelect,\n  onRemove,\n  onClick,\n  student,\n  onlyView,\n}) => {\n  const getLabel = () => {\n    if (student.state === StudentState.SHORTLISTED) {\n      return (\n        <Typography className={classes.selected}>{\"Shortlisted\"}</Typography>\n      );\n    } else if (student.state === StudentState.REJECTED) {\n      return <Typography className={classes.rejected}>{\"Rejected\"}</Typography>;\n    } else {\n      return null;\n    }\n  };\n\n  return (\n    <Card\n      className={classes.root}\n      variant=\"outlined\"\n      onClick={onClick(student.id)}\n    >\n      <CardHeader\n        avatar={\n          <Avatar\n            aria-label=\"student profile photo\"\n            className={classes.avatar}\n            src={student.Image}\n            alt={student.name}\n          />\n        }\n        action={\n          !onlyView && (\n            <IconButton\n              aria-label=\"delete\"\n              onClick={(e) => {\n                onRemove(student.id);\n              }}\n            >\n              <DeleteIcon />\n            </IconButton>\n          )\n        }\n        title={student.name}\n        subheader={getLabel()}\n      />\n      <CardActions>\n        {((student.state && student.state !== StudentState.SHORTLISTED) ||\n          !student.state) &&\n          !onlyView && (\n            <Button\n              variant=\"contained\"\n              color=\"primary\"\n              onClick={(e) => {\n                e.stopPropagation();\n                onSelect(student.id);\n              }}\n            >\n              ShortList\n            </Button>\n          )}\n        {((student.state && student.state !== StudentState.REJECTED) ||\n          !student.state) &&\n          !onlyView && (\n            <Button\n              variant=\"contained\"\n              color=\"secondary\"\n              onClick={(e) => {\n                e.stopPropagation();\n                onReject(student.id);\n              }}\n            >\n              Reject\n            </Button>\n          )}\n      </CardActions>\n    </Card>\n  );\n};\n\nexport default withStyles(styles)(StudentCard);\n"],"sourceRoot":""}